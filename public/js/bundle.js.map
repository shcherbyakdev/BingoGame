{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./frontend/views.js","webpack:///./frontend/helpers.js","webpack:///./frontend/startGame.js","webpack:///./frontend/stopGame.js","webpack:///./frontend/endGame.js","webpack:///./frontend/checkWinner.js","webpack:///./frontend/generateCards.js","webpack:///./frontend/getDataFromInputs.js","webpack:///./frontend/generateGame.js","webpack:///./frontend/model.js","webpack:///./frontend/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","renderCards","model","allUsers","document","createElement","setAttribute","userCount","user","appendChild","userLabel","j","userCardsCount","card","renderOneCard","users","cards","numbers","cardLabel","getElementById","cardData","cardWrapper","querySelector","className","temp","divW","divEl","length","slice","innerText","numberToPresent","classList","add","userNumber","label","innerHTML","cardNumber","renderRoundCount","currentRound","renderRandomNumber","currentRandomNumber","randomNumber","swapStopToStartNewGameBtn","style","display","initRenderView","changeViewToCreateGame","changeViewToPlayGame","swapStopToStartBtn","swapStartToStopBtn","paintNumberInCard","numberNumber","renderLineCompleted","row","msgField","li","renderCardCompleted","renderWinner","_views","_checkWinner","_endGame","shuffle","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","clearMsgModel","completedLines","fill","k","isPainted","clearMsgView","docuent","clearRandomNumberModel","clearRandomNumberView","clearNumbersModel","clearNumbersView","number","querySelectorAll","remove","updateIncrementRoundCount","updateRandomNumber","numbersArray","pop","generateRandomNumber","updateNumberInCard","numberIndex","check–°oincidence","isCompleted","rowNumber","checkIfLineCompleted","checkIfCardCompleted","checkIfUserWon","_endGame2","default","generateRandomNumbers","maxNumber","values","push","sort","a","b","map","updateRoundCount","roundNumber","arguments","undefined","clearPaintedNumbers","clearRandomNumber","createRandomArray","resArr","playRound","window","app","clearMsg","_helpers","playGamePage","gameContinueInterval","setInterval","clearInterval","usersCount","Array","processInputUsers","Number","Error","processInputCardsCount","cardsCount","processInputMaxNumber","_getDataFromInputs","_generateCards","_generateCards2","gameIsOn","isGameInitialized","winner","form","errDiv","exitGame","startNewGame","addEventListener","e","preventDefault","_generateGame2","lastChild","removeChild","err","console","log","message","_stopGame2","_startGame2"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/public/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","\r\nconst renderCards = model => {\r\n    const allUsers = document.createElement('div');\r\n    allUsers.setAttribute('id', `users`);\r\n    for (let i = 0; i < model.userCount; i++ ) {\r\n        const user = document.createElement('div');\r\n        user.setAttribute('id', `user-${i}`);\r\n        user.appendChild(userLabel(i));\r\n        for (let j = 0; j < model.userCardsCount; j++) {\r\n            const card = renderOneCard(model.users[i].cards[j].numbers);\r\n            card.setAttribute('id', `card-${j}`);\r\n            user.appendChild(cardLabel(j));\r\n            user.appendChild(card);\r\n        }\r\n        allUsers.appendChild(user);\r\n    }\r\n    document.getElementById('users').appendChild(allUsers);\r\n}\r\n\r\n\r\nconst renderOneCard = cardData => {\r\n    const cardWrapper = document.createElement('div');\r\n    const cardArray = document.querySelector('#cards');\r\n    cardWrapper.className = 'cardWrapper';\r\n\r\n    let step = 5,\r\n        temp=[],\r\n        divW,\r\n        divEl;\r\n\r\n    for (let i = 0; i < cardData.length; i+=step) {\r\n        temp = cardData.slice(i, i+step);\r\n        divW = document.createElement('div');\r\n        divW.className ='cardContainer';\r\n        for (let j = 0; j < temp.length; j++) {\r\n            divEl = document.createElement('div');\r\n            divEl.className = 'divEl';\r\n            divEl.innerText = temp[j].numberToPresent;\r\n            divEl.classList.add(`number-${temp[j].numberToPresent}`);\r\n            divW.appendChild(divEl);\r\n        }\r\n        cardWrapper.appendChild(divW);\r\n    }\r\n    return cardWrapper;\r\n}\r\n\r\nconst changeViewToCreateGame = () => {\r\n    // Hide game\r\n    const playGamePage = document.getElementById('play-game-page');\r\n    playGamePage.style.display = 'none';\r\n    // Random number container\r\n    const randomNumberContainer = document.getElementById('random-numbers-container');\r\n    randomNumberContainer.style.display = 'none';\r\n\r\n    const msgField = document.getElementById('msg');\r\n    msgField.style.display = 'none';\r\n    // Wipe game markup\r\n    const usersDiv = document.getElementById('users');\r\n    usersDiv.innerHTML = '';\r\n\r\n    const randomNumbersDiv = document.getElementById('random-numbers');\r\n    randomNumbersDiv.innerHTML = '';\r\n\r\n    // Show create game form\r\n    const createGamePage = document.getElementById('create-game-page');\r\n    createGamePage.style.display = 'block';\r\n}\r\nconst initRenderView = model => {\r\n    renderCards(model);\r\n}\r\n\r\n\r\nconst userLabel = userNumber => {\r\n    let label = document.createElement('h3');\r\n    label.innerHTML = `User #${userNumber}`;\r\n    return label;\r\n}\r\n\r\nconst cardLabel = cardNumber => {\r\n    let label = document.createElement('h5');\r\n    label.innerHTML = `Card #${cardNumber}`;\r\n    return label;\r\n}\r\n\r\n\r\nconst changeViewToPlayGame = () => {\r\n    // Hide form\r\n    const createGamePage = document.getElementById('create-game-page');\r\n    createGamePage.style.display = 'none';\r\n\r\n    // Show play game page\r\n    const playGamePage = document.getElementById('play-game-page');\r\n    playGamePage.style.display = 'flex';\r\n\r\n    // Show game button\r\n    const playGameBtn = document.getElementById('start-game');\r\n    playGameBtn.style.display = 'block';\r\n\r\n    // Hide stop button\r\n    const stopGameBtn = document.getElementById('stop-game');\r\n    stopGameBtn.style.display = 'none';\r\n}\r\n\r\nconst renderRoundCount = model => {\r\n    const sceletonRoundCount = document.getElementById('round-count');\r\n    sceletonRoundCount.innerHTML = `Round: ${model.currentRound}`;\r\n}\r\n\r\nconst swapStopToStartBtn = (document) => {\r\n    // Hide stop btn\r\n    const stopGameBtn = document.getElementById('stop-game');\r\n    stopGameBtn.style.display = 'none';\r\n\r\n    const startGameBtn = document.getElementById('start-game');\r\n    startGameBtn.style.display = 'block';\r\n\r\n    const randomNumberContainer = document.getElementById('random-numbers-container');\r\n    randomNumberContainer.style.display = 'none';\r\n\r\n    const msgField = document.getElementById('msg');\r\n    msgField.style.display = 'none';\r\n}\r\n\r\nconst swapStartToStopBtn = (document) => {\r\n    // Hide start btn\r\n    const playGameBtn = document.getElementById('start-game');\r\n    playGameBtn.style.display = 'none';\r\n\r\n    // Show stop btn\r\n    const stopGameBtn = document.getElementById('stop-game');\r\n    stopGameBtn.style.display = 'block';\r\n}\r\n\r\nconst swapStopToStartNewGameBtn = (document) => {\r\n    // Hide stop btn\r\n    const stopGameBtn = document.getElementById('stop-game');\r\n    stopGameBtn.style.display = 'none';\r\n\r\n    const startNewGameBtn = document.getElementById('start-new-game');\r\n    startNewGameBtn.style.display = 'block';\r\n\r\n      \r\n}\r\n\r\nconst renderRandomNumber = model => {\r\n    const currentRandomNumber = document.createElement('div');\r\n    currentRandomNumber.setAttribute('class', `r-num-${model.currentRound}`);\r\n    currentRandomNumber.innerHTML = model.randomNumber;\r\n    const sceletonRNumContainer = document.getElementById('random-numbers');\r\n    sceletonRNumContainer.appendChild(currentRandomNumber);\r\n}\r\nconst paintNumberInCard = (userNumber, cardNumber, numberNumber) => {\r\n    const userNode = document.getElementById(`user-${userNumber}`);\r\n    const cardNode = userNode.querySelector(`#card-${cardNumber}`);\r\n    const numberNode = cardNode.querySelector(`.number-${numberNumber}`);\r\n    numberNode.classList.add('paintedNumber');\r\n}\r\n\r\nconst renderLineCompleted = (user,row,card) => {\r\n    const msgField = document.getElementById('msg');\r\n    const li = document.createElement('li');\r\n    li.innerHTML = `User #${user} has crossed line #${row} in card #${card}`;\r\n    msgField.appendChild(li);\r\n}\r\nconst renderCardCompleted = (user,card) => {\r\n    const msgField = document.getElementById('msg');\r\n    const li = document.createElement('li');\r\n    li.innerHTML = `User #${user} has completed card #${card}`;\r\n    msgField.appendChild(li);\r\n}\r\nconst renderWinner = (user) => {\r\n    const msgField = document.getElementById('msg');\r\n    const li = document.createElement('li');\r\n    li.innerHTML = `User #${user} won!`;\r\n    msgField.appendChild(li);\r\n}\r\n\r\n\r\n\r\nexport {renderOneCard,renderRoundCount,renderRandomNumber,renderCards,swapStopToStartNewGameBtn,initRenderView,changeViewToCreateGame,changeViewToPlayGame,swapStopToStartBtn,swapStartToStopBtn,paintNumberInCard,renderLineCompleted,renderCardCompleted,renderWinner};","\r\nimport {renderRoundCount,renderRandomNumber,paintNumberInCard,renderMsg,renderLineCompleted,renderCardCompleted,renderWinner} from './views'\r\nimport {checkIfCardCompleted,checkIfLineCompleted,checkIfUserWon} from './checkWinner'\r\nimport endGame from './endGame'\r\nconst generateRandomNumber = model => model.numbersArray.pop();\r\nconst generateRandomNumbers = maxNumber => {\r\n    let values = [],arr;\r\n    let i = 1;\r\n    while(i <= maxNumber) {\r\n        values.push(i++);\r\n    }\r\n    arr = shuffle(values).slice(0,25).sort((a, b) => a - b).map(number => ({\r\n        numberToPresent: number,\r\n        isPainted: false\r\n    }))\r\n    return arr;\r\n}\r\nfunction shuffle(array) {\r\n    var currentIndex = array.length, temporaryValue, randomIndex;\r\n    while (0 !== currentIndex) {\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n      return array;\r\n  }\r\n  const createRandomArray = (model) => {\r\n    let resArr = [],shuffledArray;\r\n    \r\n    let i = 1;\r\n    while (i <= model.maxNumber){\r\n      resArr.push(i);\r\n      i++\r\n    }\r\n    shuffledArray = shuffle(resArr);\r\n   return shuffledArray;\r\n}\r\nconst updateRoundCount = (model, roundNumber = 0) => {\r\n    model.currentRound = roundNumber;\r\n    renderRoundCount(model);\r\n}\r\nconst clearRandomNumber = (document, model) => {\r\n    clearRandomNumberModel(model);\r\n    clearRandomNumberView(document);\r\n}\r\nconst clearMsg=(document,model) => {\r\n    clearMsgModel(model);\r\n    clearMsgView(document);\r\n\r\n}\r\nconst clearMsgModel = (model) => {\r\n    let users = model.users;\r\n    for (let i =0;i<users.length;i++){\r\n        for (let j = 0;j < users[i].cards.length;j++){\r\n            model.users[i].cards[j].completedLines.fill(false);\r\n            for ( let k = 0; k <users[i].cards[j].numbers.length ;k++){\r\n            model.users[i].cards[j].numbers[k].isPainted = false;\r\n            }\r\n        }\r\n    }\r\n \r\n}\r\nconst clearMsgView = (docuent) => {\r\n    const msgField = document.getElementById('msg');\r\n    msgField.innerHTML = '';\r\n}\r\nconst clearRandomNumberModel = (model) => {\r\n    model.randomNumber = null;\r\n}\r\n\r\nconst clearRandomNumberView = (document) => {\r\n    const randomNumbersDiv = document.getElementById('random-numbers');\r\n    randomNumbersDiv.innerHTML = '';\r\n}\r\nconst playRound = () => {\r\n    const model = window.app.model;\r\n\r\n    updateIncrementRoundCount(model);\r\n    updateRandomNumber(model);\r\n check–°oincidence(model);\r\n\r\n}\r\nconst clearPaintedNumbers = (model)=>{\r\n    clearNumbersModel(model);\r\n    clearNumbersView(document);\r\n}\r\nconst clearNumbersModel = (model)  =>{\r\n    let users = model.users;\r\n    for (let i =0;i<users.length;i++){\r\n        for (let j = 0;j < users[i].cards.length;j++){\r\n            for ( let k = 0; k <users[i].cards[j].numbers.length ;k++){\r\n            model.users[i].cards[j].numbers[k].isPainted = false;\r\n            }\r\n        }\r\n    }\r\n}\r\n    const clearNumbersView = (document)=>{\r\n        const number = document.querySelectorAll('.divEl');\r\n        for (let i = 0; i <number.length;i++){\r\n            number[i].classList.remove('paintedNumber');\r\n        }\r\n       }\r\nconst updateIncrementRoundCount = (model) => {\r\n    // Update model\r\n    model.currentRound += 1;\r\n    // Update view\r\n    renderRoundCount(model);\r\n}\r\nconst updateRandomNumber = (model) => {\r\n    model.randomNumber = generateRandomNumber(model);\r\n    renderRandomNumber(model);\r\n}\r\n\r\nconst updateNumberInCard = (model, userNumber, cardNumber, numberIndex) => {\r\n    // Update model\r\n    model.users[userNumber].cards[cardNumber].numbers[numberIndex].isPainted = true;\r\n    // Update view\r\n    paintNumberInCard(userNumber, cardNumber, model.users[userNumber].cards[cardNumber].numbers[numberIndex].numberToPresent);\r\n}\r\nconst check–°oincidence = (model) => {\r\n    \r\n    for(let i = 0; i < model.userCount; i++) {\r\n        for(let j = 0; j < model.userCardsCount; j++) {\r\n            if(model.users[i].cards[j].isCompleted) {\r\n                continue;\r\n            } else {\r\n                for(let k = 0; k < 25; k ++) {\r\n                    if(model.users[i].cards[j].numbers[k].isPainted) {\r\n                        continue;\r\n                    } else {\r\n                        if(model.users[i].cards[j].numbers[k].numberToPresent == model.randomNumber) {\r\n                            updateNumberInCard(model, i, j, k);\r\n                            const rowNumber = k % 5;\r\n                            if(model.users[i].cards[j].completedLines[rowNumber] || checkIfLineCompleted(model, i, j, rowNumber)) {\r\n                                model.users[i].cards[j].completedLines[rowNumber] = true;\r\n                                renderLineCompleted(i,rowNumber,j);\r\n                               //alert(`User #${i} has crossed line #${rowNumber} in card #${j}`);\r\n                                if(checkIfCardCompleted(model, i, j)) {\r\n                                    model.users[i].cards[j].isCompleted = true;\r\n                                    //alert(`User #${i} has completed card #${j}`);\r\n                                    renderCardCompleted(i,j);\r\n                                            if(checkIfUserWon(model, i)) {\r\n                                                renderWinner(i);\r\n                                    //alert(`User #${i} won!`); \r\n                                        endGame(document, model);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport  {generateRandomNumbers,updateRoundCount,clearPaintedNumbers,clearRandomNumber,createRandomArray,playRound,clearMsg};","import {createRandomArray,playRound} from './helpers'\r\n\r\n\r\nconst startGame = (document, model) => {\r\n    const playGamePage = document.getElementById('random-numbers-container');\r\n    const msgField = document.getElementById('msg');\r\n    playGamePage.style.display = 'block';\r\n    msgField.style.display = 'block';\r\n    model.numbersArray = createRandomArray(model);\r\n    model.gameContinueInterval = setInterval(playRound, 2000);\r\n}\r\n\r\n\r\nexport default startGame;\r\n\r\n\r\n\r\n\r\n\r\n","import {updateRoundCount,clearRandomNumber,clearPaintedNumbers,clearMsg} from './helpers'\r\n\r\n\r\nconst stopCurrentGame = (document, model) => {\r\n    if(model.gameContinueInterval) {\r\n        clearInterval(model.gameContinueInterval);\r\n    }\r\n    updateRoundCount(model, 0);\r\n    clearRandomNumber(document, model);\r\n    clearPaintedNumbers(model);\r\n    clearMsg(document,model);\r\n}\r\nexport default stopCurrentGame;\r\n\r\n\r\n\r\n\r\n\r\n","import {swapStopToStartNewGameBtn} from './views'\r\n\r\nconst endGame = (document, model) => {\r\n    if(model.gameContinueInterval) {\r\n        clearInterval(model.gameContinueInterval);\r\n    }\r\n\r\n    swapStopToStartNewGameBtn(document);\r\n}\r\nexport default endGame;","\r\nconst checkIfUserWon = (model, userNumber) => {\r\n    for(let i = 0; i < model.users[userNumber].cards.length; i ++) {\r\n        if (!model.users[userNumber].cards[i].isCompleted) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nconst checkIfCardCompleted = (model, userNumber, cardNumber) => {\r\n    for(let i = 0; i < model.users[userNumber].cards[cardNumber].completedLines.length; i ++) {\r\n        if (!model.users[userNumber].cards[cardNumber].completedLines[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nconst checkIfLineCompleted = (model, userNumber, cardNumber, rowNumber) => {\r\n    for(let i = rowNumber; i < 25; i += 5) {\r\n        if (model.users[userNumber].cards[cardNumber].numbers[i].isPainted) {\r\n          \r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexport {checkIfLineCompleted,checkIfUserWon,checkIfCardCompleted};","import { generateRandomNumbers } from './helpers';\r\n\r\nconst generateCards = model => {\r\n    const usersCount = model.userCount;\r\n    const userCardsCount = model.userCardsCount;\r\n    const maxNumber = model.maxNumber;\r\n    \r\n\r\n    model.users = [];\r\n    for(let i = 0; i < usersCount; i++){\r\n        model.users[i] = {};\r\n    }\r\n    for (let i = 0; i < usersCount; i++) {\r\n        model.users[i].cards = new Array(userCardsCount);\r\n        for (let j = 0; j < userCardsCount; j++) {\r\n            model.users[i].cards[j] = {\r\n                isCompleted: false,\r\n                numbers: generateRandomNumbers(maxNumber),\r\n                completedLines: [false, false, false, false, false]\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default generateCards;\r\n\r\n\r\n\r\n","const processInputUsers = (value) => {\r\n    const usersCount = Number(value);\r\n    if(usersCount < 2 || usersCount > 5) {\r\n        throw new Error(\"User count must be between 2 and 5\");\r\n    }\r\n    return usersCount;\r\n}\r\n\r\nconst processInputCardsCount = (value) => {\r\n    const cardsCount = Number(value);\r\n    if(cardsCount < 1 || cardsCount > 3) {\r\n        throw new Error(\"Cards count must be between 1 and 3\")\r\n    }\r\n    return cardsCount;\r\n}\r\n\r\nconst processInputMaxNumber = (value) => {\r\n    const maxNumber = Number(value);\r\n    if(maxNumber < 25 || maxNumber > 100) {\r\n        throw new Error(\"Max number must be between 25 and 100\");\r\n    }\r\n    return maxNumber;\r\n}\r\n\r\n\r\nexport {processInputUsers,processInputCardsCount,processInputMaxNumber};","import {processInputUsers,processInputCardsCount,processInputMaxNumber} from './getDataFromInputs';\r\nimport  generateCards  from './generateCards';\r\nimport { initRenderView } from './views';\r\n\r\n\r\nconst generateGame = (document, model) => {\r\n  model.userCount = processInputUsers(document.getElementById('usersNum').value);\r\n  model.userCardsCount = processInputCardsCount(document.getElementById('cardsNum').value);\r\n  model.maxNumber = processInputMaxNumber(document.getElementById('countNum').value);\r\n  generateCards(model);\r\n  initRenderView(model);\r\n}\r\n\r\nexport default generateGame;","export default window.app = {\r\n    model: {\r\n        userCount: 0,\r\n        users: [\r\n           {\r\n                cards: [\r\n                    {\r\n                        isCompleted: false,\r\n                        numbers: [\r\n                            {\r\n                                isPainted: false,\r\n                                numberToPresent: 0\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        maxNumber: 0,\r\n        numbersArray: null,\r\n        userCardsCount: 0,\r\n        randomNumber: null,\r\n        gameIsOn: true,\r\n        isGameInitialized: false,\r\n        winner: null,\r\n        currentRound: 0,\r\n        gameContinueInterval: null\r\n    }\r\n};\r\n","import app from './model';\r\nimport  generateGame  from './generateGame';\r\nimport {changeViewToPlayGame,changeViewToCreateGame,swapStartToStopBtn,swapStopToStartBtn} from './views';\r\nimport stopCurrentGame from './stopGame';\r\nimport startGame from './startGame';\r\n\r\n// Generate game\r\n(function () {\r\n    const form = document.getElementById('form');\r\n    const errDiv = document.createElement('h5');\r\n    errDiv.classList.add('errMsg');\r\n    form.addEventListener('submit', e => {\r\n        e.preventDefault();\r\n        try {\r\n            generateGame(document, window.app.model);\r\n            changeViewToPlayGame();\r\n            if(form.lastChild == errDiv) {\r\n                form.removeChild(errDiv);\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n            errDiv.innerHTML = `Error\\n${err.message}`;\r\n            form.appendChild(errDiv);\r\n        }\r\n    })\r\n})();\r\n// Exit game\r\n(function () {\r\n    const exitGame = document.getElementById('exit-game');\r\n    const startNewGame = document.getElementById('start-new-game');\r\n    exitGame.addEventListener('click', () => {\r\n        try {\r\n            stopCurrentGame(document, window.app.model)\r\n            changeViewToCreateGame()\r\n            startNewGame.style.display = 'none';\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n\r\n        }\r\n    })\r\n})();\r\n\r\n// Start game\r\n(function () {\r\n    const startGameBtn = document.getElementById('start-game');\r\n    \r\n    startGameBtn.addEventListener('click', () => {\r\n        try {\r\n            swapStartToStopBtn(document);\r\n            startGame(document, window.app.model);\r\n            console.log(window.app.model);\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    })\r\n})();\r\n//Stop Game\r\n(function () {\r\n    const stopGameBtn = document.getElementById('stop-game');\r\n    stopGameBtn.addEventListener('click', () => {\r\n        try {\r\n            swapStopToStartBtn(document);\r\n            stopCurrentGame(document, window.app.model);\r\n            console.log(window.app.model);\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n\r\n        }\r\n    })\r\n})();\r\n\r\n//start new game\r\n(function (){\r\n    const startNewGame = document.getElementById('start-new-game');\r\n    startNewGame.addEventListener('click', () => {\r\n        try {\r\n            stopCurrentGame(document, window.app.model);\r\n            changeViewToCreateGame();\r\n            startNewGame.style.display = 'none';\r\n         \r\n        } catch (err){\r\n            console.log(err);\r\n        }\r\n    \r\n    })\r\n})();"],"sourceRoot":""}